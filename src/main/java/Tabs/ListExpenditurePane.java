/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Tabs;

import Dao.ExpenditureDao;
import Entity.Expenditure;
import Util.DateUtil;
import com.mycompany.qlchitieu.MainFrame;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class ListExpenditurePane extends javax.swing.JPanel {

    /**
     * Creates new form ListExpenditurePane
     */
    private DefaultTableModel model = null;
    private MainFrame main;
    
    public ListExpenditurePane(MainFrame main) {
        this.main=main;
        initComponents();
        
        initTable();
        
        loadData();
        
        //Thiết lập chế độ chọn cho bảng
        tblListExpenditure.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // Cho phép chọn nhiều hàng
    }
    
    //Khởi tạo bảng
    private void initTable(){
       model = new DefaultTableModel();
        
       model.setColumnIdentifiers(new String[]{"ID","Name","Amount","IDType","Note","ExpenditureDate"});
       //Hiển thị thông tin
       tblListExpenditure.setModel(model);
    }
    
    private void loadData(){
        try {
            ExpenditureDao dao = new ExpenditureDao();
            List<Expenditure> list = dao.findAll();
            
            model.setRowCount(0); //xóa toàn bộ dữ liệu trong bảng trước khi thêm dữ liệu
            for (Expenditure item : list) {
                
                String amount = Double.toString(item.getAmount());
                DateUtil du = new DateUtil();
                String date = du.toString(item.getExpenditureDate());
                //Thêm các giá trị vào row
                String[] row = new String[]{item.getID(),
                    item.getName(),
                    amount,
                    item.getIDType(),
                    item.getNote(),
                    date};
                
                //Add row vào bảng
                model.addRow(row);
            }
            
            //Cập nhật lại giao diện bảng
            model.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppmList = new javax.swing.JPopupMenu();
        ppmUpdate = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        ppmDelete = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListExpenditure = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();

        ppmUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update.png"))); // NOI18N
        ppmUpdate.setText("Chỉnh sửa");
        ppmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmUpdateActionPerformed(evt);
            }
        });
        ppmList.add(ppmUpdate);
        ppmList.add(jSeparator2);

        ppmDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        ppmDelete.setText("Xóa");
        ppmDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmDeleteActionPerformed(evt);
            }
        });
        ppmList.add(ppmDelete);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 225));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/listExpenditure_32.png"))); // NOI18N
        jLabel1.setText("LIỆT KÊ CHI TIÊU");

        tblListExpenditure.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblListExpenditure.setComponentPopupMenu(ppmList);
        jScrollPane1.setViewportView(tblListExpenditure);

        jLabel2.setText("Tìm kiếm:");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel3.setText("Nhập ID");

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/load.png"))); // NOI18N
        btnLoad.setText("Tải lại");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 231, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnSearch)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch)
                        .addComponent(btnSearch)
                        .addComponent(btnDelete)
                        .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ppmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmUpdateActionPerformed
        try {  
                //Lấy chỉ số hàng đang được chọn
                int selectedRow = tblListExpenditure.getSelectedRow();
                
                //Lấy ID của hàng đó
                Object IdObject = tblListExpenditure.getValueAt(selectedRow, 0);
                if(IdObject != null) {
                    String id = IdObject.toString();
                    main.showUpdateExpenditure(id);
                }   
            
        } catch (Exception e) {
            //e.printStackTrace(); sử dụng để check lỗi tại dòng nào
            JOptionPane.showMessageDialog(this, e.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ppmUpdateActionPerformed

    private void ppmDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmDeleteActionPerformed
        try {
            if(JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xóa", "",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                ExpenditureDao dao = new ExpenditureDao();
                
                //Lấy chỉ số hàng đang được chọn
                int selectedRow = tblListExpenditure.getSelectedRow();
                
                //Lấy ID của hàng đó
                Object IdObject = tblListExpenditure.getValueAt(selectedRow, 0);
                if(IdObject != null) {
                    String id = IdObject.toString();
                    if(dao.delete(id)) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                    
                    //Cập nhật lại dữ liệu
                    loadData();
                    }
                    else JOptionPane.showMessageDialog(this, "Xóa thất bại","Thông báo",JOptionPane.ERROR_MESSAGE);
                }
            }   
            
        } catch (Exception e) {
            //e.printStackTrace(); sử dụng để check lỗi tại dòng nào
            JOptionPane.showMessageDialog(this, e.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ppmDeleteActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //Lưu một mảng các hàng được chọn và xóa theo id từng hàng 
        ExpenditureDao dao = new ExpenditureDao();
        try {
            if(JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xóa", "",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                int[] selectedRows = tblListExpenditure.getSelectedRows();
                
                for (int row : selectedRows) {
                    //Lấy id của các hàng đã chọn
                    String id = tblListExpenditure.getValueAt(row, 0).toString();

                    dao.delete(id);
                }
                
                //Cập nhật lại dữ liệu
                loadData();
                JOptionPane.showMessageDialog(this, "Xóa thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
//            System.out.println("Lỗi:"+ex.getMessage());
              JOptionPane.showMessageDialog(this, "Xóa thất bại","Thông báo",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String id = txtSearch.getText();
        try {
            main.showUpdateExpenditure(id);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy khoản chi","Thông báo",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        loadData();
    }//GEN-LAST:event_btnLoadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem ppmDelete;
    private javax.swing.JPopupMenu ppmList;
    private javax.swing.JMenuItem ppmUpdate;
    private javax.swing.JTable tblListExpenditure;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
